% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_imputation.R
\name{run_imputation}
\alias{run_imputation}
\title{Run imputation}
\usage{
run_imputation(
  X,
  Xnet = ADImpute::network.coefficients,
  do = c("Network"),
  cores = 1,
  ...
)
}
\arguments{
\item{X}{Matrix to impute.}

\item{Xnet}{Network coefficients to use for imputation.}

\item{do}{character; choice of methods to be used for imputation. Currently
supported methods are \code{'Baseline'}, \code{'DrImpute'},
\code{'Network'}, and \code{'Ensemble'}. Defaults to \code{'Ensemble'}.
Not case-sensitive. Can include one or more methods. Non-supported methods
will be ignored.}

\item{cores}{integer; number of cores used for paralell computation}

\item{...}{
  Arguments passed on to \code{\link[ADImpute:Impute]{ADImpute::Impute}}
  \describe{
    \item{\code{data}}{matrix; raw counts (genes as rows and samples as columns)}
    \item{\code{sce}}{SingleCellExperiment; normalized counts and associated metadata.}
    \item{\code{write}}{logical; write intermediary and imputed objects to files?}
    \item{\code{outdir}}{character; path to directory where output files are written.
Defaults to working directory}
    \item{\code{method.choice}}{character; best performing method in training data for
each gene}
    \item{\code{scale}}{integer; scaling factor to divide all expression levels by
(defaults to 1)}
    \item{\code{pseudo.count}}{integer; pseudo-count to be added to expression levels
to avoid log(0) (defaults to 1)}
    \item{\code{labels}}{character; vector specifying the cell type of each column of
\code{data}}
    \item{\code{cell.clusters}}{integer; number of cell subpopulations}
    \item{\code{drop_thre}}{numeric; between 0 and 1 specifying the threshold to
determine dropout values}
    \item{\code{type}}{A character specifying the type of values in the expression
matrix. Can be 'count' or 'TPM'}
    \item{\code{tr.length}}{matrix with at least 2 columns: 'hgnc_symbol' and
'transcript_length'}
    \item{\code{BPPARAM}}{parallel back-end to be used during parallel computation.
See \code{\link[BiocParallel]{BiocParallelParam-class}}.}
    \item{\code{net.coef}}{matrix; network coefficients. Please provide if you don't
want to use ADImpute's network model. Must contain one first column 'O'
acconting for the intercept of the model and otherwise be an adjacency matrix
with hgnc_symbols in rows and columns. Doesn't have to be squared. See
\code{ADImpute::demo_net} for a small example.}
    \item{\code{net.implementation}}{character; either 'iteration', for an iterative
solution, or 'pseudoinv', to use Moore-Penrose pseudo-inversion as a
solution. 'pseudoinv' is not advised for big data.}
    \item{\code{bulk}}{vector of reference bulk RNA-seq, if available (average across
samples)}
    \item{\code{true.zero.thr}}{if set to NULL (default), no true zero estimation is
performed. Set to numeric value between 0 and 1 for estimation. Value
corresponds to the threshold used to determine true zeros: if the probability
of dropout is lower than \code{true.zero.thr}, the imputed entries are set
to zero.}
    \item{\code{prob.mat}}{matrix of the same size as data, filled with the dropout
probabilities for each gene in each cell}
  }}
}
\value{
Imputed matrix.
}
\description{
Run matrix imputation with various methods.
}
\examples{
X <- scKirby::example_obj("matrix")
Xnet <- ADImpute::network.coefficients
imputed <- run_imputation(X, Xnet)
}
